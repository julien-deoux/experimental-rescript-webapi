---
import { createAPIModuleLink } from "../utils.js";
const { item, typesInOwnModule } = Astro.props;

let link;
if (typesInOwnModule && typesInOwnModule.has(item.path)) {
  link = `#${item.path}`;
}

if (item.path.startsWith("WebAPI.")) {
  const paths = item.path.split(".");
  if (paths.length === 3) {
    link = `${import.meta.env.BASE_URL}/${createAPIModuleLink(paths[1])}#${paths[2]}`;
  }
}

const genericTypeParameters = item.genericTypeParameters || [];
---

<span>
  {link ? <a href={link}>{item.path}</a> : item.path}{
    genericTypeParameters.length > 0 && (
      <>
        {"<"}
        {genericTypeParameters.map((subItem) => (
          <Astro.self typesInOwnModule={typesInOwnModule} item={subItem} />
        ))}
        {">"}
      </>
    )
  }
</span>
<style>
  span {
    display: inline-flex;
    color: var(--sl-color-accent-low);
  }
</style>
